alc test/simple.al
let f = (fun x -> (if ((x) = (0)) then (0) else ((f) ((x) - (1)))) + (2)) in ((f) (2))
fun x -> (if ((x) = (0)) then (0) else ((f) ((x) - (1)))) + (2)
f: 0
(f) (2)
f: 1
f
f: 1
2
f: 1
(if ((x) = (0)) then (0) else ((f) ((x) - (1)))) + (2)
x: 1
f: 1
if ((x) = (0)) then (0) else ((f) ((x) - (1)))
x: 1
f: 1
(x) = (0)
x: 1
f: 1
x
x: 1
f: 1
0
x: 1
f: 1
(f) ((x) - (1))
x: 1
f: 1
f
x: 1
f: 1
(x) - (1)
x: 1
f: 1
x
x: 1
f: 1
1
x: 1
f: 1
(if ((x) = (0)) then (0) else ((f) ((x) - (1)))) + (2)
x: 2
f: 1
if ((x) = (0)) then (0) else ((f) ((x) - (1)))
x: 2
f: 1
(x) = (0)
x: 2
f: 1
x
x: 2
f: 1
0
x: 2
f: 1
(f) ((x) - (1))
x: 2
f: 1
f
x: 2
f: 1
(x) - (1)
x: 2
f: 1
x
x: 2
f: 1
1
x: 2
f: 1
(if ((x) = (0)) then (0) else ((f) ((x) - (1)))) + (2)
x: 3
f: 1
if ((x) = (0)) then (0) else ((f) ((x) - (1)))
x: 3
f: 1
(x) = (0)
x: 3
f: 1
x
x: 3
f: 1
0
x: 3
f: 1
0
x: 3
f: 1
2
x: 3
f: 1
2
x: 3
f: 1
2
x: 3
f: 1
6
